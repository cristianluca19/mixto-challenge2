[{"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\index.js":"1","C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\App.js":"2","C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\reportWebVitals.js":"3","C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\inicio\\inicio.jsx":"4","C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\registro\\registro.jsx":"5","C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\styles.js":"6","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\index.js":"7","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\App.js":"8","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\reportWebVitals.js":"9","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\redux\\Store.js":"10","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\registro\\registro.jsx":"11","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\inicio\\inicio.jsx":"12","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\redux\\Action.js":"13","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\styles.js":"14"},{"size":588,"mtime":1611632795119,"results":"15","hashOfConfig":"16"},{"size":442,"mtime":1611632781897,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4668,"mtime":1611633140861,"results":"19","hashOfConfig":"16"},{"size":9691,"mtime":1611633142341,"results":"20","hashOfConfig":"16"},{"size":616,"mtime":1611612877550,"results":"21","hashOfConfig":"16"},{"size":713,"mtime":1611674225094,"results":"22","hashOfConfig":"23"},{"size":427,"mtime":1611676192779,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":835,"mtime":1611675889749,"results":"26","hashOfConfig":"23"},{"size":9557,"mtime":1611678069474,"results":"27","hashOfConfig":"23"},{"size":4787,"mtime":1611697985061,"results":"28","hashOfConfig":"23"},{"size":277,"mtime":1611676246375,"results":"29","hashOfConfig":"23"},{"size":616,"mtime":1611612877550,"results":"30","hashOfConfig":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16hycn8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1b1p0hj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\index.js",[],"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\App.js",["63"],"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\inicio\\inicio.jsx",["66"],"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\registro\\registro.jsx",["67","68","69"],"C:\\Users\\crist\\Documents\\Repo\\challenge\\client\\src\\styles.js",[],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\index.js",[],["70","71"],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\App.js",[],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\redux\\Store.js",["72"],"import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  LOGIN,\r\n  REGISTER\r\n} from \"./Action\";\r\n\r\nconst initialState = {\r\n  users: [{email:\"cristianlucatti@gmail.com\", password:\"Mixto123\"}],\r\n  login: false\r\n};\r\n\r\nexport function counterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      const user = state.users.filter(user=> user.email === action.payload.email && user.password === action.payload.password)\r\n      if(user)\r\n      return{\r\n        ...state,\r\n        login: true\r\n      }\r\n    case REGISTER:\r\n      return {\r\n        ...state,\r\n        users: state.users.concat(action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default createStore(\r\n  counterReducer,\r\n  compose(applyMiddleware(thunk))\r\n);\r\n","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\registro\\registro.jsx",["73","74","75"],"import React, { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as action from '../redux/Action.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport Link from '@material-ui/core/Link';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport Logo from '../imagen/logo.png'\r\nimport { useStyles } from '../styles.js'\r\n\r\n\r\nexport default function Registro() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = useState({});\r\n  const [validation, setValidation] = useState(true)\r\n  const [validationEmail, setValidationEmail] = useState(true)\r\n  const [open, setOpen] = useState(false);\r\n  const [valuePass, setValuePass] = useState({\r\n    password: '',\r\n    password2: '',\r\n    showPassword: false,\r\n  });\r\n  const history = useHistory()\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValuePass({ ...valuePass, showPassword: !valuePass.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { id, value } = event.target;\r\n    setValues({ ...values, [id]: value });\r\n  };\r\n\r\n  const validations = () => {\r\n    setTimeout(() => {\r\n      if (values.password === values.password2) {\r\n        setValidation(true)\r\n      } else {\r\n        setValidation(false)\r\n      }\r\n    }, 600)\r\n  }\r\n\r\n  const validationsEmail = () => {\r\n    if (values.email) {\r\n      if (!(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,32}$/).test(values.email)) {\r\n        setValidationEmail(true)\r\n      } else {\r\n        setValidationEmail(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(action.register(values))\r\n    Swal.fire({\r\n      position: 'top',\r\n      icon: 'success',\r\n      title: 'Felicitaciones ',\r\n      text: 'Tu usuario se ha creado con exito',\r\n      footer: 'Ahora inicia sesion',\r\n      timer: 2500\r\n    })\r\n\r\n    setTimeout(() => { history.push('/') }, 2300);\r\n  }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    validationsEmail()\r\n    validations()\r\n  }, [validationsEmail, validations])\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar variant=\"rounded\"\r\n          src={Logo}\r\n          alt=\"logo\"\r\n          className={classes.large} >\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro\r\n        </Typography>\r\n        <Grid item>\r\n          <Link href=\"/ \" variant=\"body1\" className={classes.paper}>\r\n            Ya tienes cuenta? Inicia sesion\r\n        </Link>\r\n        </Grid>\r\n        <form className={classes.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Input\r\n                placeholder=\"Nombres\"\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Nombres\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Input\r\n                placeholder=\"Apellido\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Apellido\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Input\r\n                error={validationEmail ? false : true}\r\n                placeholder=\"Email\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n              {validationEmail ? <FormHelperText id=\"component-error-text\"></FormHelperText> : <FormHelperText id=\"component-error-text\">Email incorrecto</FormHelperText>}\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Input\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n                placeholder=\"Password\"\r\n                type={valuePass.showPassword ? 'text' : 'password'}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={handleClickOpen}>\r\n                      <ErrorOutlineIcon variant=\"outlined\" color=\"primary\" onMouseDown={handleMouseDownPassword} >\r\n                        Open dialog\r\n                </ErrorOutlineIcon>\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n\r\n                }\r\n              />\r\n              <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                  Consejos para password seguro\r\n        </DialogTitle>\r\n                <DialogContent dividers>\r\n                  <Typography gutterBottom>\r\n                    El password debe tener al menos 8 digitos que contengan al menos:\r\n           <br />\r\n           * 1 Mayuscula\r\n           <br />\r\n           * 1 Número\r\n           <br />\r\n           * 1 Simbolo especial\r\n          </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                    OK\r\n          </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Input\r\n                error={validation ? false : true}\r\n                aria-describedby={validation ? \"Password no coinciden\" : \"Password coinciden\"}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Repetir Password\"\r\n                id=\"password2\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n                placeholder=\"Repetir Password\"\r\n                type={valuePass.showPassword ? 'text' : 'password'}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              {validation ? <FormHelperText id=\"component-error-text\"></FormHelperText> : <FormHelperText id=\"component-error-text\">Password coinciden</FormHelperText>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"Acepto terminos y condiciones\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {values.firstName && values.lastName && values.email && values.password && validation &&\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Registrarme\r\n          </Button>\r\n          }\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\inicio\\inicio.jsx",["76","77","78","79","80"],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\redux\\Action.js",[],"C:\\Users\\crist\\Documents\\Repo\\challenge2\\src\\styles.js",[],{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":23},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":2,"message":"90","line":48,"column":25,"nodeType":"83","messageId":"91","endLine":48,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":57,"column":9,"nodeType":"94","endLine":65,"endColumn":4},{"ruleId":"92","severity":1,"message":"95","line":67,"column":9,"nodeType":"94","endLine":75,"endColumn":4},{"ruleId":"89","severity":2,"message":"90","line":79,"column":25,"nodeType":"83","messageId":"91","endLine":79,"endColumn":46},{"ruleId":"85","replacedBy":"96"},{"ruleId":"87","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":22,"column":5,"nodeType":"100","messageId":"101","endLine":26,"endColumn":9},{"ruleId":"81","severity":1,"message":"102","line":4,"column":23,"nodeType":"83","messageId":"84","endLine":4,"endColumn":34},{"ruleId":"92","severity":1,"message":"103","line":58,"column":9,"nodeType":"94","endLine":66,"endColumn":4},{"ruleId":"92","severity":1,"message":"104","line":68,"column":9,"nodeType":"94","endLine":76,"endColumn":4},{"ruleId":"81","severity":1,"message":"105","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":21},{"ruleId":"81","severity":1,"message":"106","line":5,"column":13,"nodeType":"83","messageId":"84","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"107","line":26,"column":10,"nodeType":"83","messageId":"84","endLine":26,"endColumn":15},{"ruleId":"81","severity":1,"message":"108","line":26,"column":17,"nodeType":"83","messageId":"84","endLine":26,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":51,"column":23,"nodeType":"111","messageId":"112","endLine":51,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-undef","'REACT_APP_BACKEND_URL' is not defined.","undef","react-hooks/exhaustive-deps","The 'validations' function makes the dependencies of useEffect Hook (at line 108) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'validations' in its own useCallback() Hook.","VariableDeclarator","The 'validationsEmail' function makes the dependencies of useEffect Hook (at line 108) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'validationsEmail' in its own useCallback() Hook.",["113"],["114"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'useSelector' is defined but never used.","The 'validations' function makes the dependencies of useEffect Hook (at line 102) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'validations' in its own useCallback() Hook.","The 'validationsEmail' function makes the dependencies of useEffect Hook (at line 102) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'validationsEmail' in its own useCallback() Hook.","'useDispatch' is defined but never used.","'action' is defined but never used.","'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]